namespace WarSpot.Project.Logical.Folder
{
	class SomeClass
	{
		protected enum States
		{
			First,
			Second = 2,
			Third,
			Over9000 = 100500
		}

		const int SomeConstant = 42;

		private string _privateVar;
		// public string publicVar; // deprecated

		#region some properties
		public bool SimpleProperty {get;set;}
		public int MoreComplicatedPropetry
		{
			get
			{
				return _privateVar;
			}
			set
			{
				if(value < SomeConstant)
				{
					_privateVar = value;
				}
			}
		}

		protected State {get;set;}
		#endregion

		#region functions
		/// <summary>
		/// Small description of the function
		/// </summary>
		/// <param name="paramName">Parameter description</param>
		/// <returns>return value</returns>
		public ReturnType FunctionForMakingSomethinsUsefull(int paramName)
		{
			if(paramName < someConstant)
			{
				// need {} in every if-else and cycles, especialy if it contains only one operation
			}
			// foreach() for collections
			switch(State)
			{
			case States.First:
			case States.Second:
				doSomething();
			break;
			case States.Third:
				doAnotherthing();
			default:
				// panic!
			break;
			}
		}
		#endregion
	}
}

Правила:

1) Коммитить проект целиком, а не только исходники.
2) Коммиты в GIT сопровождаются комментариями.
3) Коммитить .suo, \bin, \obj - запрещено.
4) Имена файлов соответствуют логике приложения, а название проекта - лабораторной работе.
5) Символы, допустимые в именах файлов - это латинские буквы, цифры и знак подчёркивания.
6) В одном файле - один класс.
7) Названия пространств имён, типов, методов, публичных и внутренних свойств, полей и событий - с заглавной буквы.
8) Названия приватных и защищённых полей, локальных переменных, параметров методов - со строчной буквы.
9) Если название объекта состоит из нескольких английских слов, первое из них оформляется, как указано выше, остальные - с заглавной буквы.
10) Фигурные скобки - единственные на строке.
11) Отступ в табуляциях, одна табуляция отображается как 4 пробела.
12) В условном операторе нет пробела перед скобками.
13) По пробелу с обеих сторон оператора.
14) При перечислении параметров после запятой ставится пробел.
15) Строковые константы на английском языке.
16) Выводимые на экран строковые константы следуют правилам грамматики.
17) Обязательно приглашение на ввод.
18) Короткое описание того, что программа делает, если она ожидает ввод от пользователя.
19) Ошибки ввода должны быть обнаружены, и должно выдаваться описание ошибки и повторное приглашение на ввод.
20) Комментарии по некоторым частям алгоритма и объявленным переменным.
21) Фрагменты кода более 1 строки, повторяющиеся 3 и более раз, выносятся в отдельную функцию. В случае, если строка одна или повторов меньше, это остаётся на усмотрение автора.
22) Оставлять глупые или бессмысленные комментарии и выводы программы - себе дороже.
23) Между кодом и символом комментария // как минимум один пробел.
24) Статические переменные - чаще всего зло. Подумайте ещё раз.
25) Между методами - как минимум одна пустая строка.
26) В приложениях с пользовательским интерфейсом объекты экранной формы имеют названия, отражающие их назначение.